library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;
use ieee.std_logic_textio.all;
use std.textio.all;

entity FrameBuffer is
port(
	clk : in std_logic;
	rst : in std_logic
	
	);
end FrameBuffer;

architecture rtl of FrameBuffer is
	type RegisterFile is array(0 to 635) of std_logic_vector(461 downto 0);
    	signal Frame: RegisterFile;
		
	type memory is array(0 to 41) of std_logic_vector(1 downto 0);
	signal    ram_block: memory;
	attribute ram_init_file : string;
	attribute ram_init_file of ram_block : signal is "diff_out.mif";
	
	signal frame_row:std_logic_vector(461 downto 0);
	signal row :std_logic_vector(9 downto 0);
	signal read_address : std_logic_vector(7 downto 0);
	signal data :  std_logic_vector(65 downto 0);

component Faces
port(	
	address : in std_logic_vector(7 downto 0); 
	data : out std_logic_vector(65 downto 0)
	);
end component Faces;

 component PanelDisplay
 port(
		clk : in std_logic;
		rst : in std_logic;
		hsync : out std_logic;
		vsync : out std_logic;
		red : out std_logic_vector(3 downto 0);
		green : out std_logic_vector(3 downto 0);
		blue : out std_logic_vector(3 downto 0);
		pixel:in std_logic;
		color:in std_logic
);		
 end component PanelDisplay;

begin

	F: Faces port map(
		address=>read_address,
		data=>data
		);

	process(clk,rst)
	begin
	if rst='0' then
	
	read_address<=(others=>'0');
	row<=(others=>'0');
	frame_row<=(others=>'0');

	elsif rising_edge(clk) then
	
	frame_row(461 downto 396)<=data;
	frame_row(395 downto 330)<=data;
	frame_row(329 downto 264)<=data;
	frame_row(263 downto 198)<=data;
	frame_row(197 downto 132)<=data;
	frame_row(131 downto 66)<=data;
	frame_row(65 downto 0)<=data;
	
	Frame(conv_integer(row))<=frame_row;
		if row=635 then
			row<=(others=>'0');
		else
			row<=row+1;
		end if;	
	read_address<=read_address+1;
								
		if read_address="01101001" then
		read_address<=(others=>'0');
		end if;
			
	end if;
	end process;

	
	
	process
	begin
	if rst='0' then
	
	pixel_now<="1010000001";--461
	v_count<=(others=>'0');
	
	elsif rising_edge(clk) then
	
	pixel_row<=Frame(v_count);
	pixel<=pixel_row(pixel_now);
	pixel_now<=pixel-1;
	
		if pixel_now=0 then
			v_count<=v_count+1;
			pixel_now<="1010000001";--461
			
		elsif v_count=635
			v_count<=(others=>'0');
		end if;
	
	if pixel_now<=461 and pixel_now>=396 then
	
		if v_count<=105 then
			color<=ram_block(0);
		elsif v_count>=106 and v_count<=211 then 
			color<=ram_block(7);
		elsif v_count>=212 and v_count<=317 then
			color<=ram_block(14);
		elsif v_count>=318 and v_count<=423 then
			color<=ram_block(21);
		elsif v_count>=424 and v_count<=529 then
			color<=ram_block(28);
		elsif v_count>=530 and v_count<=635 then
			color<=ram_block(35);
		end if;
		
	elsif pixel_now<=395 and pixel_now>=330 then
	
		if v_count<=105 then
			color<=ram_block(1);
		elsif v_count>=106 and v_count<=211 then 
			color<=ram_block(8);
		elsif v_count>=212 and v_count<=317 then
			color<=ram_block(15);
		elsif v_count>=318 and v_count<=423 then
			color<=ram_block(22);
		elsif v_count>=424 and v_count<=529 then
			color<=ram_block(29);
		elsif v_count>=530 and v_count<=635 then
			color<=ram_block(36);
		end if;
		
	elsif pixel_now<=329 and pixel_now>=264 then
	
		if v_count<=105 then
			color<=ram_block(2);
		elsif v_count>=106 and v_count<=211 then 
			color<=ram_block(9);
		elsif v_count>=212 and v_count<=317 then
			color<=ram_block(16);
		elsif v_count>=318 and v_count<=423 then
			color<=ram_block(23);
		elsif v_count>=424 and v_count<=529 then
			color<=ram_block(30);
		elsif v_count>=530 and v_count<=635 then
			color<=ram_block(37);
		end if;
		
	elsif pixel_now<=263 and pixel_now>=198 then
	
		if v_count<=105 then
			color<=ram_block(3);
		elsif v_count>=106 and v_count<=211 then 
			color<=ram_block(10);
		elsif v_count>=212 and v_count<=317 then
			color<=ram_block(17);
		elsif v_count>=318 and v_count<=423 then
			color<=ram_block(24);
		elsif v_count>=424 and v_count<=529 then
			color<=ram_block(31);
		elsif v_count>=530 and v_count<=635 then
			color<=ram_block(38);
		end if;
		
	elsif pixel_now<=197 and pixel_now>=132 then
	
		if v_count<=105 then
			color<=ram_block(4);
		elsif v_count>=106 and v_count<=211 then 
			color<=ram_block(11);
		elsif v_count>=212 and v_count<=317 then
			color<=ram_block(18);
		elsif v_count>=318 and v_count<=423 then
			color<=ram_block(25);
		elsif v_count>=424 and v_count<=529 then
			color<=ram_block(32);
		elsif v_count>=530 and v_count<=635 then
			color<=ram_block(39);
		end if;
	
	elsif pixel_now<=131 and pixel_now>=66 then
	
		if v_count<=105 then
			color<=ram_block(5);
		elsif v_count>=106 and v_count<=211 then 
			color<=ram_block(12);
		elsif v_count>=212 and v_count<=317 then
			color<=ram_block(19);
		elsif v_count>=318 and v_count<=423 then
			color<=ram_block(26);
		elsif v_count>=424 and v_count<=529 then
			color<=ram_block(33);
		elsif v_count>=530 and v_count<=635 then
			color<=ram_block(40);
		end if; 
		
	elsif pixel_now<=65 and pixel_now>=0 then
	
		if v_count<=105 then
			color<=ram_block(6);
		elsif v_count>=106 and v_count<=211 then 
			color<=ram_block(13);
		elsif v_count>=212 and v_count<=317 then
			color<=ram_block(20);
		elsif v_count>=318 and v_count<=423 then
			color<=ram_block(27);
		elsif v_count>=424 and v_count<=529 then
			color<=ram_block(34);
		elsif v_count>=530 and v_count<=635 then
			color<=ram_block(41);
		end if;
	else
	color<="00";
	end if;
	end if;
	end process;
	
	
end rtl;

